{"version":3,"sources":["webpack:///./fetchCountries.js"],"names":["debounce","require","searchInput","document","querySelector","intro","updateView","countriesArray","remove","undefined","PNotify","info","text","length","div","createElement","setAttribute","appendChild","countries","innerHTML","listCountries","forEach","element","name","insertAdjacentHTML","capital","population","flag","languages","renderCountries","console","log","error","addEventListener","searchQuery","value","fetch","then","response","ok","json","Error","catch","err"],"mappings":"qMACMA,EAAWC,EAAQ,QACnBC,EAAcC,SAASC,cAAc,cACrCC,EAAQF,SAASC,cAAc,UAsDrC,SAASE,EAAWC,GACdF,EAAMD,cAAc,kBACtBC,EAAMD,cAAc,iBAAiBI,SAEjBC,MAAlBF,EACFG,IAAQC,KAAK,CACXC,KAAM,0CAECL,EAAeM,QAAU,KAjDtC,SAAyBN,GACnBF,EAAMD,cAAc,kBACtBC,EAAMD,cAAc,iBAAiBI,SAEvC,IAAMM,EAAMX,SAASY,cAAc,OACnCD,EAAIE,aAAa,QAAS,gBAC1BX,EAAMY,YAAYH,GAClB,IAAMI,EAAYf,SAASC,cAAc,iBACzC,GAAIG,EAAeM,OAAS,EAAG,CAC7BK,EAAUC,UAAY,OACtB,IAAMC,EAAgBF,EAAUd,cAAc,MAC9CG,EAAec,SACb,SAAAC,GAAO,OAAKF,EAAcD,WAAd,OAAkCG,EAAQC,KAA1C,gBAGdL,EAAUM,mBACR,aADF,aAGMjB,EAAe,GAAGgB,KAHxB,+EAMoBhB,EAAe,GAAGkB,QANtC,yCAOuBlB,EAAe,GAAGmB,WAPzC,yGAYYnB,EAAe,GAAGoB,KAZ9B,+CAiBApB,EAAe,GAAGqB,UAAUP,SAC1B,SAAAC,GAAO,OACJnB,SAASC,cACR,YACAe,WAFD,OAEqBG,EAAQC,KAF7B,WAgBLM,CAAgBtB,GAChBuB,QAAQC,IAAIxB,IAEZG,IAAQsB,MAAM,CACZpB,KAAM,gEAKZV,EAAY+B,iBACV,QACAjC,GAAS,kBAxEakC,EAwEQhC,EAAYiC,MAvEnCC,MAAM,yCAAyCF,GACnDG,MAAK,SAAAC,GACJ,GAAIA,EAASC,GAAI,OAAOD,EAASE,OACjC,MAAM,IAAIC,MAAM,0BAEjBC,OAAM,SAAAC,GACLb,QAAQE,MAAM,UAAWW,OAiEoBN,KAAK/B,GAxExD,IAAwB4B,IAwE6C,M","file":"main.9b45e1f4aa5d3fed75ed.js","sourcesContent":["import PNotify from 'pnotify/dist/es/PNotify';\nconst debounce = require('lodash.debounce');\nconst searchInput = document.querySelector('#js-search');\nconst intro = document.querySelector('.intro');\n\nfunction fetchCountries(searchQuery) {\n  return fetch(`https://restcountries.eu/rest/v2/name/${searchQuery}`)\n    .then(response => {\n      if (response.ok) return response.json();\n      throw new Error('Error fetching data');\n    })\n    .catch(err => {\n      console.error('Error: ', err);\n    });\n}\n\nfunction renderCountries(countriesArray) {\n  if (intro.querySelector('.js-countries')) {\n    intro.querySelector('.js-countries').remove();\n  }\n  const div = document.createElement('div');\n  div.setAttribute('class', 'js-countries');\n  intro.appendChild(div);\n  const countries = document.querySelector('.js-countries');\n  if (countriesArray.length > 1) {\n    countries.innerHTML = '<ul>';\n    const listCountries = countries.querySelector('ul');\n    countriesArray.forEach(\n      element => (listCountries.innerHTML += `<li>${element.name}</li>`),\n    );\n  } else {\n    countries.insertAdjacentHTML(\n      'afterbegin',\n      `\n    <h1>${countriesArray[0].name}</h1>\n    <div class='box'>\n    <div class='info'>\n    <p>Capital: <span>${countriesArray[0].capital}</span></p>\n    <p>Population: <span>${countriesArray[0].population}</span></p>\n    <p>Languages:</p>\n    <ul></ul>\n    </div>\n    <div class='flag'>\n    <img src=\"${countriesArray[0].flag}\" alt=\"flag\">\n    </div>\n    </div>\n    `,\n    );\n    countriesArray[0].languages.forEach(\n      element =>\n        (document.querySelector(\n          '.info ul',\n        ).innerHTML += `<li>${element.name}</li>`),\n    );\n  }\n}\n\nfunction updateView(countriesArray) {\n  if (intro.querySelector('.js-countries')) {\n    intro.querySelector('.js-countries').remove();\n  }\n  if (countriesArray == undefined) {\n    PNotify.info({\n      text: 'Please enter the name of the country!',\n    });\n  } else if (countriesArray.length <= 10) {\n    renderCountries(countriesArray);\n    console.log(countriesArray);\n  } else {\n    PNotify.error({\n      text: 'Too many matches found. Please enter a more specific query!',\n    });\n  }\n}\n\nsearchInput.addEventListener(\n  'input',\n  debounce(() => fetchCountries(searchInput.value).then(updateView), 500),\n);\n"],"sourceRoot":""}